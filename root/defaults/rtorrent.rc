#execute = {sh,-c,/usr/bin/php7 /usr/share/webapps/rutorrent/php/initplugins.php abc &}
#execute.nothrow = rm,/run/php/.rtorrent.sock
#network.scgi.open_local = /run/php/.rtorrent.sock
#schedule = socket_chmod,0,0,"execute=chmod,0660,/run/php/.rtorrent.sock"
#schedule = socket_chgrp,0,0,"execute=chgrp,abc,/run/php/.rtorrent.sock"

log.open_file = "rtorrent", /config/log/rtorrent/rtorrent.log
log.add_output = "info", "rtorrent"

# Maximum and minimum number of peers to connect to per torrent.
#min_peers = 40
#max_peers = 100

# Same as above but for seeding completed torrents (-1 = same as downloading)
#min_peers_seed = 10
#max_peers_seed = 50

# Maximum number of simultanious uploads per torrent.
#max_uploads = 15

download_rate = 0
upload_rate = 0

# schedule = watch_directory_1,5,5,"load.start=/downloads/watched/*.torrent"
# Directory to save incomplete downloads to.
execute = {/bin/sh,-c,mkdir -p /data/incomplete}
directory = /data/incomplete

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
execute = {/bin/bash,-c,mkdir -p /config/rtorrent/session}
session = /config/rtorrent/session/

# Directory to move completed downloads to.
# Note please ensure you disable the "AutoMove" in rutorrent 
# otherwise there could be a conflict that can cause deletion
# of partially downloaded torrents.
#execute = {/bin/bash,-c,mkdir -p /data/completed}
#system.method.set_key = event.download.finished,move_complete,"execute=mv,-u,$d.get_base_path=,/data/completed/;d.set_directory=/data/completed/"

# Watch a directory for new torrents, and stop those that have been
# deleted. Note please ensure you disable the "AutoMove" in rutorrent 
# otherwise there could be a conflict that can cause deletion
# of partially downloaded torrents.
#execute = {/bin/bash,-c,mkdir -p /data/watched}
#schedule = watch_directory,5,5,load_start=/data/watched/*.torrent
#schedule = untied_directory,5,5,stop_untied=
#schedule = untied_directory,5,5,remove_untied=

# Disable check for SSL cert for tracker
#
network.http.ssl_verify_peer.set = 0

# The ip address reported to the tracker.
#ip = 127.0.0.1
#ip = rakshasa.no

# The ip address the listening socket and outgoing connections is
# bound to.
#bind = 127.0.0.1

# Port range to use for listening.
#port_range = 49160-49160

# Start opening ports at a random position within the port range.
port_random = no

# Set whether the client should try to connect to UDP trackers.
use_udp_trackers = yes

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
encryption = allow_incoming,enable_retry,prefer_plaintext

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
# 
dht = auto

# UDP port to use for DHT. 
# 
#dht_port = 49170

# Enable peer exchange (for torrents not marked private)
#
peer_exchange = yes

# Allows you to decide whether to pre-allocate space for files when adding torrent
#
system.file_allocate.set = no

# Port used for scgi connections
#
scgi_port = 0.0.0.0:5000

schedule = low_diskspace,5,60,close_low_diskspace=100M

check_hash = yes
encoding_list = UTF-8
